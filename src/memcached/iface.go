// DO NOT EDIT THIS FILE
// This file is generated from iface.go.in

// +build !generate

package memcached

type Memcached interface {
	Add(key []byte, value []byte, opts *AddOptions) (rcas uint64, rerr error)

	Replace(key []byte, value []byte, opts *ReplaceOptions) (rcas uint64, rerr error)

	Get(key []byte, opts *GetOptions) (rvalue []byte, rflags uint32, rcas uint64, rerr error)

	Increment(key []byte, amount uint64, initial uint64, opts *IncrementOptions) (rvalue []byte, rcas uint64, rerr error)

	Decrement(key []byte, amount uint64, initial uint64, opts *DecrementOptions) (rvalue []byte, rcas uint64, rerr error)

	Set(key []byte, value []byte, opts *SetOptions) (rcas uint64, rerr error)

	Delete(key []byte, opts *DeleteOptions) (rerr error)

	Append(key []byte, value []byte, opts *AppendOptions) (rerr error)

	Prepend(key []byte, value []byte, opts *PrependOptions) (rerr error)

	Flush(opts *FlushOptions) (rerr error)

	Nop(opts *NopOptions) (rerr error)

	Quit(opts *QuitOptions) (rerr error)

	Version(opts *VersionOptions) (rerr error)

	Stat(opts *StatOptions) (rerr error)

	GetWithKey(key []byte, opts *GetWithKeyOptions) (rkey []byte, rvalue []byte, rflags uint32, rcas uint64, rerr error)
}

func Add(key []byte, value []byte, opts *AddOptions) *commandAdd {
	return &commandAdd{
		key:   key,
		value: value,

		opts: opts,
	}
}

type AddOptions struct {
	Expire uint32
	Cas    uint64
	Quiet  bool
}

func Replace(key []byte, value []byte, opts *ReplaceOptions) *commandReplace {
	return &commandReplace{
		key:   key,
		value: value,

		opts: opts,
	}
}

type ReplaceOptions struct {
	Expire uint32
	Cas    uint64
	Quiet  bool
}

func Get(key []byte, opts *GetOptions) *commandGet {
	return &commandGet{
		key: key,

		opts: opts,
	}
}

type GetOptions struct {
	Quiet bool
}

func Increment(key []byte, amount uint64, initial uint64, opts *IncrementOptions) *commandIncrement {
	return &commandIncrement{
		key: key,

		amount: amount,

		initial: initial,

		opts: opts,
	}
}

type IncrementOptions struct {
	Expire uint32
	Cas    uint64
	Quiet  bool
}

func Decrement(key []byte, amount uint64, initial uint64, opts *DecrementOptions) *commandDecrement {
	return &commandDecrement{
		key: key,

		amount: amount,

		initial: initial,

		opts: opts,
	}
}

type DecrementOptions struct {
	Expire uint32
	Cas    uint64
	Quiet  bool
}

func Set(key []byte, value []byte, opts *SetOptions) *commandSet {
	return &commandSet{
		key:   key,
		value: value,

		opts: opts,
	}
}

type SetOptions struct {
	Expire uint32
	Cas    uint64
	Quiet  bool
}

func Delete(key []byte, opts *DeleteOptions) *commandDelete {
	return &commandDelete{
		key: key,

		opts: opts,
	}
}

type DeleteOptions struct {
	Cas   uint64
	Quiet bool
}

func Append(key []byte, value []byte, opts *AppendOptions) *commandAppend {
	return &commandAppend{
		key:   key,
		value: value,

		opts: opts,
	}
}

type AppendOptions struct {
	Cas   uint64
	Quiet bool
}

func Prepend(key []byte, value []byte, opts *PrependOptions) *commandPrepend {
	return &commandPrepend{
		key:   key,
		value: value,

		opts: opts,
	}
}

type PrependOptions struct {
	Cas   uint64
	Quiet bool
}

func Flush(opts *FlushOptions) *commandFlush {
	return &commandFlush{

		opts: opts,
	}
}

type FlushOptions struct {
	Quiet bool
}

func Nop(opts *NopOptions) *commandNop {
	return &commandNop{

		opts: opts,
	}
}

type NopOptions struct {
}

func Quit(opts *QuitOptions) *commandQuit {
	return &commandQuit{

		opts: opts,
	}
}

type QuitOptions struct {
	Quiet bool
}

func Version(opts *VersionOptions) *commandVersion {
	return &commandVersion{

		opts: opts,
	}
}

type VersionOptions struct {
}

func Stat(opts *StatOptions) *commandStat {
	return &commandStat{

		opts: opts,
	}
}

type StatOptions struct {
}

func GetWithKey(key []byte, opts *GetWithKeyOptions) *commandGetWithKey {
	return &commandGetWithKey{
		key: key,

		opts: opts,
	}
}

type GetWithKeyOptions struct {
	Quiet bool
}

type commandAdd struct {
	key   []byte
	value []byte

	opts *AddOptions
}

type commandReplace struct {
	key   []byte
	value []byte

	opts *ReplaceOptions
}

type commandGet struct {
	key []byte

	opts *GetOptions
}

type commandIncrement struct {
	key []byte

	amount uint64

	initial uint64

	opts *IncrementOptions
}

type commandDecrement struct {
	key []byte

	amount uint64

	initial uint64

	opts *DecrementOptions
}

type commandSet struct {
	key   []byte
	value []byte

	opts *SetOptions
}

type commandDelete struct {
	key []byte

	opts *DeleteOptions
}

type commandAppend struct {
	key   []byte
	value []byte

	opts *AppendOptions
}

type commandPrepend struct {
	key   []byte
	value []byte

	opts *PrependOptions
}

type commandFlush struct {
	opts *FlushOptions
}

type commandNop struct {
	opts *NopOptions
}

type commandQuit struct {
	opts *QuitOptions
}

type commandVersion struct {
	opts *VersionOptions
}

type commandStat struct {
	opts *StatOptions
}

type commandGetWithKey struct {
	key []byte

	opts *GetWithKeyOptions
}
